#!/bin/bash

source "$(dirname "$0")/lib/logging.sh"

# Usage function
usage() {
  warn "Usage: $0 <command> [options]"
  echo ""
  echo "Commands:"
  echo ""
  echo "Index Lifecycle Management (ISM):"
  echo "  create-ism-policy      Create a new ISM policy"
  echo "  update-ism-policy      Update an existing ISM policy"
  echo "  auto-update-ism-policy Automatically update ISM policy based on current settings"
  echo "  get-ism-seq            Retrieve the current ISM sequence number for an index"
  echo "  delete-ism-policy      Delete the specified ISM policy in OpenSearch"
  echo ""
  echo "Index Operations:"
  echo "  force-rollover         Force rollover of the specified index"
  echo "  create-index           Create a new index with template and settings"
  echo "  delete-index           Delete an index or multiple indexes by pattern or name"
  echo "  update-template        Update the OpenSearch index template"
  echo "  delete-template        Delete the specified template in OpenSearch"
  echo ""
  echo "Alias Management:"
  echo "  update-alias           Manage aliases"
  echo "  delete-alias           Delete an alias in OpenSearch for the given index pattern"
  echo ""
  echo "Utility:"
  echo "  version                Show the version of this CLI"
  echo ""
  echo "Example:"
  echo "  $0 update-alias -h http://localhost:9200 -t '{\"actions\":...}'"
  echo ""
  exit 1
}


print_version() {
  if [ -f ".version" ]; then
    echo "osctl version: $(cat .version)"
  else
    error "Error: .version file not found."
    exit 1
  fi
}

# Check if the user wants to print the version
if [[ "$1" == "-v" ]]; then
  print_version
  exit 0
fi

# Check if a command is provided
if [ -z "$1" ]; then
  error "Error: No command provided."
  usage
fi

# Redirect to the appropriate script
BIN_DIR="$(dirname "$0")/bin"
COMMAND=$1
shift # Remove the first argument so the rest can be passed to the sub-script

# Check if command is valid
SCRIPT="$BIN_DIR/$COMMAND"
if [[ -x "$SCRIPT" && -f "$SCRIPT" ]]; then
  exec "$SCRIPT" "$@"
else
  error "Error: Invalid command '$COMMAND'"
  usage
fi
