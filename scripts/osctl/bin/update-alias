#!/bin/bash

unset OPENSEARCH_HOST
unset ALIAS_JSON

source "$(dirname "$0")/../lib/logging.sh"

# Usage function
usage() {
  warn "Usage: $0 -h <opensearch_host> -d <alias_json>"
  echo ""
  echo "This script updates aliases in OpenSearch using the JSON actions you provide."
  echo ""
  echo "Options:"
  echo "  -h <opensearch_host>   The OpenSearch host URL (e.g., http://localhost:9200)"
  echo "  -d <alias_json>        The JSON payload for the alias operations"
  echo ""
  echo "Example:"
  echo "  $0 -h http://localhost:9200 -d '{ ... }'"
  echo ""
  exit 1
}

# Parse arguments
while getopts "h:d:" opt; do
  case ${opt} in
    h ) OPENSEARCH_HOST=$OPTARG ;;
    d ) ALIAS_JSON=$OPTARG ;;
    * ) usage ;;
  esac
done

# Check if required arguments are set
if [ -z "$OPENSEARCH_HOST" ] || [ -z "$ALIAS_JSON" ]; then
  error "Error: OpenSearch host and the alias operations JSON are required."
  usage
fi

info "Updating aliases with the provided configuration..."
CREATE_RESPONSE=$(curl -s -X POST "$OPENSEARCH_HOST/_aliases" -H 'Content-Type: application/json' -d "$ALIAS_JSON")
CURL_EXIT_CODE=$?

# Check if curl failed
if [ $CURL_EXIT_CODE -ne 0 ]; then
  error "Error: Unable to communicate with OpenSearch. Please check your connection."
  exit 1
fi

if echo "$CREATE_RESPONSE" | grep -q '"acknowledged":true'; then
  success "Alias updated successfully."
else
  error "Error: Failed to create alias. Response: $CREATE_RESPONSE"
  exit 1
fi

