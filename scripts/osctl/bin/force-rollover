#!/bin/bash

unset OPENSEARCH_HOST
unset INDEX

source "$(dirname "$0")/../lib/logging.sh"

# Usage function
usage() {
  warn "Usage: $0 -h <opensearch_host> -i <index>"
  echo ""
  echo "This script forces an immediate rollover of a specified index in OpenSearch."
  echo ""
  echo "Options:"
  echo "  -h <opensearch_host>   The OpenSearch host URL (e.g., http://localhost:9200)"
  echo "  -i <index>             The index to rollover"
  echo ""
  echo "Example:"
  echo "  $0 -h http://localhost:9200 -i events"
  echo ""
  exit 1
}

# Parse arguments
while getopts "h:i:" opt; do
  case ${opt} in
    h ) OPENSEARCH_HOST=$OPTARG ;;
    i ) INDEX=$OPTARG ;;
    * ) ;;
  esac
done

# Check if required arguments are set
if [ -z "$OPENSEARCH_HOST" ] || [ -z "$INDEX" ]; then
  error "Error: OpenSearch host and index are required."
  usage
fi


info "Forcing rollover on index '$INDEX'..."
ROLLOVER_RESPONSE=$(curl -s -X POST "$OPENSEARCH_HOST/$INDEX/_rollover" \
  -H "Content-Type: application/json" \
  -d '{
        "conditions": {
          "max_age": "0s"
        }
      }')
CURL_EXIT_CODE=$?

# Check if curl failed
if [ $CURL_EXIT_CODE -ne 0 ]; then
  error "Error: Unable to communicate with OpenSearch. Please check your connection."
  exit 1
fi

# Check if rollover was successful
if echo "$ROLLOVER_RESPONSE" | grep -q '"acknowledged":true'; then
  success "Rollover completed successfully for index '$INDEX'"
else
  error "Error: Rollover failed. Response: $ROLLOVER_RESPONSE"
  exit 1
fi

