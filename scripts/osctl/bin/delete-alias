#!/bin/bash

unset OPENSEARCH_HOST
unset INDEX_PATTERN
unset ALIAS_NAME

source "$(dirname "$0")/../lib/logging.sh"

# Usage function
usage() {
  warn "Usage: $0 -h <opensearch_host> -i <index_pattern> -a <alias_name>"
  echo ""
  echo "Deletes an alias in OpenSearch for the given index pattern."
  echo ""
  echo "Options:"
  echo "  -h <opensearch_host>     The OpenSearch host URL (e.g., http://localhost:9200)"
  echo "  -i <index_pattern>       The index pattern to delete the alias from (e.g., events*)"
  echo "  -a <alias_name>          The alias name to delete (e.g., user_events)"
  echo ""
  echo "Example:"
  echo "  $0 -h http://localhost:9200 -i events* -a user_events"
  echo ""
  exit 1
}

# Parse arguments
while getopts "h:i:a:" opt; do
  case ${opt} in
    h ) OPENSEARCH_HOST=$OPTARG ;;
    i ) INDEX_PATTERN=$OPTARG ;;
    a ) ALIAS_NAME=$OPTARG ;;
    * ) usage ;;
  esac
done

# Check required arguments
if [ -z "$OPENSEARCH_HOST" ] || [ -z "$INDEX_PATTERN" ] || [ -z "$ALIAS_NAME" ]; then
  error "Error: All parameters are required."
  usage
fi

info "Deleting alias '$ALIAS_NAME' from index pattern '$INDEX_PATTERN'..."

DELETE_RESPONSE=$(curl -s -X DELETE "$OPENSEARCH_HOST/$INDEX_PATTERN/_alias/$ALIAS_NAME")
CURL_EXIT_CODE=$?

# Check if curl failed
if [ $CURL_EXIT_CODE -ne 0 ]; then
  error "Error: Unable to communicate with OpenSearch. Please check your connection."
  exit 1
fi

if echo "$DELETE_RESPONSE" | grep -q '"acknowledged":true'; then
  success "Alias '$ALIAS_NAME' deleted successfully from '$INDEX_PATTERN'."
  exit 0
else
  error "Error: Failed to delete alias. Response: $DELETE_RESPONSE"
  exit 1
fi
