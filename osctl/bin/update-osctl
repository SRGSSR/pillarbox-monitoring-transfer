#!/bin/bash
# update-osctl
#
# Downloads and installs (or updates) the osctl tools from GitHub release assets.
# Does everything in /tmp, then wipes the current directory before copying the new files.

# Config
ASSET_NAME="osctl.zip"
source "$(dirname "$0")/../lib/logging.sh"

# Usage function
usage() {
  warn "Usage: $0 <version>"
  echo ""
  echo "This script updates the osctl tools to the specified version from GitHub releases."
  echo ""
  echo "Options:"
  echo "  -v <version>   The version to install (e.g., 1.2.3)"
  echo ""
  echo "Example:"
  echo "  $0 -v 1.2.3"
  echo ""
  echo "This script ensures that the latest osctl tools are installed and replaces any existing files in the current directory."
  exit 1
}

# Parse arguments
while getopts "v:" opt; do
  case ${opt} in
    v ) VERSION=$OPTARG ;;
    * ) ;;
  esac
done

# Require version argument
if [ -z "$VERSION" ]; then
  usage
fi

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
TMP_DIR="$(mktemp -d)"
ZIP_PATH="${TMP_DIR}/${ASSET_NAME}"
DOWNLOAD_URL="https://github.com/SRGSSR/pillarbox-monitoring-transfer/releases/download/v${VERSION}/${ASSET_NAME}"

info $SCRIPT_DIR
info "Installing osctl tools version ${VERSION}"
info "Downloading from: ${DOWNLOAD_URL}"

# Download the ZIP to temp
CREATE_RESPONSE=$(curl -sSL -w "%{http_code}" -o "$ZIP_PATH" "$DOWNLOAD_URL")
CURL_EXIT_CODE=$?

# Check if curl failed or the HTTP status code is not 2xx
if [ $CURL_EXIT_CODE -ne 0 ] || [ "${CREATE_RESPONSE: -3}" -ge 400 ]; then
  error "Error: Download failed. HTTP status code: ${CREATE_RESPONSE: -3}. Does version '${VERSION}' exist?"
  rm -rf "$TMP_DIR"
  exit 1
fi
success "Download complete."

# Extract it in the temp dir
if ! unzip -q "$ZIP_PATH" -d "$TMP_DIR"; then
  error "Error: Unzip failed."
  rm -rf "$TMP_DIR"
  exit 1
fi
success "Extraction complete."

# Clean current directory
info "Cleaning current directory: ${SCRIPT_DIR}"
find "$SCRIPT_DIR" -mindepth 1 -not -name "$(basename "$0")" -exec rm -rf {} +
rm -f "$0"  # nuke the script itself too
success "Old files removed."

# Copy new files over
info "Copying new files into: ${SCRIPT_DIR}"
cp -r "${TMP_DIR}/"* "$SCRIPT_DIR"
success "osctl tools installed/updated successfully."

# Cleanup temp
rm -rf "$TMP_DIR"
